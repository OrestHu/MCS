////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : My2To4Decoder.vf
// /___/   /\     Timestamp : 02/24/2024 14:52:36
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3a -verilog C:/Decoder/Decoder/My2To4Decoder.vf -w C:/Decoder/Decoder/My2To4Decoder.sch
//Design Name: My2To4Decoder
//Device: spartan3a
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module My2To4Decoder(IN_0, 
                     IN_1, 
                     IN_2, 
                     IN_3, 
                     OUT_0, 
                     OUT_1, 
                     OUT_2, 
                     OUT_3, 
                     OUT_4, 
                     OUT_5);

    input IN_0;
    input IN_1;
    input IN_2;
    input IN_3;
   output OUT_0;
   output OUT_1;
   output OUT_2;
   output OUT_3;
   output OUT_4;
   output OUT_5;
   
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_73;
   
   AND3B3  XLXI_2 (.I0(IN_3), 
                  .I1(IN_2), 
                  .I2(IN_1), 
                  .O(XLXN_4));
   AND3B2  XLXI_3 (.I0(IN_3), 
                  .I1(IN_1), 
                  .I2(IN_0), 
                  .O(XLXN_5));
   AND3B1  XLXI_5 (.I0(IN_2), 
                  .I1(IN_3), 
                  .I2(IN_1), 
                  .O(XLXN_6));
   AND4B2  XLXI_6 (.I0(IN_0), 
                  .I1(IN_1), 
                  .I2(IN_2), 
                  .I3(IN_3), 
                  .O(XLXN_7));
   OR4  XLXI_8 (.I0(XLXN_7), 
               .I1(XLXN_6), 
               .I2(XLXN_5), 
               .I3(XLXN_4), 
               .O(OUT_0));
   AND2  XLXI_19 (.I0(IN_3), 
                 .I1(IN_2), 
                 .O(OUT_1));
   AND4B1  XLXI_21 (.I0(IN_1), 
                   .I1(IN_2), 
                   .I2(IN_3), 
                   .I3(IN_0), 
                   .O(XLXN_63));
   AND4B1  XLXI_22 (.I0(IN_2), 
                   .I1(IN_0), 
                   .I2(IN_1), 
                   .I3(IN_3), 
                   .O(XLXN_62));
   AND4B4  XLXI_23 (.I0(IN_0), 
                   .I1(IN_1), 
                   .I2(IN_2), 
                   .I3(IN_3), 
                   .O(XLXN_61));
   OR3  XLXI_24 (.I0(XLXN_63), 
                .I1(XLXN_62), 
                .I2(XLXN_61), 
                .O(OUT_3));
   AND4B3  XLXI_25 (.I0(IN_3), 
                   .I1(IN_2), 
                   .I2(IN_0), 
                   .I3(IN_1), 
                   .O(XLXN_70));
   AND3  XLXI_26 (.I0(IN_3), 
                 .I1(IN_2), 
                 .I2(IN_1), 
                 .O(XLXN_71));
   AND3  XLXI_28 (.I0(IN_3), 
                 .I1(IN_2), 
                 .I2(IN_0), 
                 .O(XLXN_72));
   AND3  XLXI_29 (.I0(IN_0), 
                 .I1(IN_1), 
                 .I2(IN_3), 
                 .O(XLXN_73));
   OR4  XLXI_30 (.I0(XLXN_70), 
                .I1(XLXN_71), 
                .I2(XLXN_72), 
                .I3(XLXN_73), 
                .O(OUT_4));
   INV  XLXI_31 (.I(IN_3), 
                .O(OUT_5));
   AND4  XLXI_34 (.I0(IN_0), 
                 .I1(IN_1), 
                 .I2(IN_2), 
                 .I3(IN_3), 
                 .O(OUT_2));
endmodule
